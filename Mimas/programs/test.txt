type mybool.
mybool -- false. 
mybool -- true.

def not(bool) -> bool.
not(false) -> true.
not(true ) -> false.

def myand(bool,bool) -> bool.
myand(false, _) -> false.
myand(true , A) -> A.

def myor(bool,bool) -> bool.
myor(true , _ )-> true.
myor(false, A )-> A.

def myxor(bool, bool) -> bool.
myxor(A,B) -> (A and not(B)) or (not(A) and B).

def if(bool,{A},{A}) -> A.
if(false, _ , {F}) -> F.
if(true ,{T},  _ ) -> T.

def nth(int,list(A),A) -> A.
nth(_,[],D) -> D.
nth(0,H|_,_)-> H.
nth(N,_|T,D)-> nth(N-1,T,D).

def addvecint(int^N,int^N) -> int^N.
addvecint(A,B) -> map2(add,A,B).

def distance2([float,float],[float,float]) -> float.
distance2([X0,Y0],[X1,Y1]) ->
	Dx := X0 - X1;
	Dy := Y0 - Y1;
	(Dx*Dx+Dy*Dy)^0.5
	.

def sinc(float) -> float.
sinc(X) -> sin(X)/X ? 1 .